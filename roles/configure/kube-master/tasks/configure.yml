# filename: roles/configure/kube-master/tasks/configure.yml
---

- name: Create Kubernetes master ssl directory
  file:
    path: /etc/kubernetes/ssl
    state: directory

- name: Add Kubernetes master SSL resources
  copy:
    src: "{{ kube_resource_dir }}/ca/{{ item }}"
    dest: "/etc/kubernetes/ssl/{{ item }}"
    mode: 0600
    owner: root
    group: root
  with_items:
    - ca.pem
    - apiserver.pem
    - apiserver-key.pem

- name: Create flannel configuration directory
  file:
    path: /etc/flannel
    state: directory

- name: Add flannel local configuration
  template:
    src: etc_flannel_options.env.j2
    dest: /etc/flannel/options.env

- name: Create flannel systemd configuration directory
  file:
    path: /etc/systemd/system/flanneld.service.d
    state: directory

- name: Add flannel systemd drop-in
  template:
    src: etc_systemd_system_flanneld.service.d_40-ExecStartPre-symlink.conf.j2
    dest: /etc/systemd/system/flanneld.service.d/40-ExecStartPre-symlink.conf

- name: Create Docker systemd configuration directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Add Docker systemd drop-in (require flannel before starting)
  template:
    src: etc_systemd_system_docker.service.d_40-flannel.conf.j2
    dest: /etc/systemd/system/docker.service.d/40-flannel.conf

- name: Add kubelet service configuration
  template:
    src: services/kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service

- name: Create Kubernetes manifests directory
  file:
    path: /etc/kubernetes/manifests
    state: directory

- name: Add kube-apiserver manifest
  template:
    src: manifests/kube-apiserver.yaml.j2
    dest: /etc/kubernetes/manifests/kube-apiserver.yaml

- name: Add kube-proxy manifest
  template:
    src: manifests/kube-proxy.yaml.j2
    dest: /etc/kubernetes/manifests/kube-proxy.yaml

- name: Add kube-controller-manager manifest
  template:
    src: manifests/kube-controller-manager.yaml.j2
    dest: /etc/kubernetes/manifests/kube-controller-manager.yaml

- name: Add kube-scheduler manifest
  template:
    src: manifests/kube-scheduler.yaml.j2
    dest: /etc/kubernetes/manifests/kube-scheduler.yaml

- name: Add Calico service configuration
  template:
    src: services/calico-node.service.j2
    dest: /etc/systemd/system/calico-node.service

- name: Add Calico policy controller pod
  template:
    src: manifests/policy-controller.yaml.j2
    dest: /etc/kubernetes/manifests/policy-controller.yaml

- name: Create Kubernetes CNI directory
  file:
    path: /etc/kubernetes/cni/net.d
    state: directory

- name: Add Calico's CNI configuration
  template:
    src: etc_kubernetes_cni_net.d_10-calico.conf.j2
    dest: /etc/kubernetes/cni/net.d/10-calico.conf

- name: Check if flannel pod network range configuration exists in etcd
  command: etcdctl --endpoints
           http://{{ hostvars[groups['etcd'][0]]['ansible_env']['COREOS_PUBLIC_IPV4'] }}:2379
           get /coreos.com/network/config
  register: network_config
  changed_when: false
  failed_when: network_config.rc != 0 and network_config.rc != 4

- name: Add flannel pod network range configuration to etcd
  uri:
    url: http://{{ hostvars[groups['etcd'][0]]['ansible_env']['COREOS_PUBLIC_IPV4'] }}:2379/v2/keys/coreos.com/network/config
    method: PUT
    headers:
      Content-type: application/x-www-form-urlencoded
    status_code: 201
    body: "value={\"Network\":\"{{ pod_network }}\",
           \"Backend\":{\"Type\":\"vxlan\"}}"
  when: network_config.rc == 4

- name: Start flannel
  systemd:
    name: flanneld
    state: started
    enabled: yes
    daemon_reload: yes

- name: Start Kubelet
  systemd:
    name: kubelet
    state: started
    enabled: yes
    daemon_reload: yes

- name: Start Calico
  systemd:
    name: calico-node
    state: started
    enabled: yes
    daemon_reload: yes
